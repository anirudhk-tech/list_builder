[
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Query",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Lead",
        "importPath": "app.models.lead",
        "description": "app.models.lead",
        "isExtraImport": true,
        "detail": "app.models.lead",
        "documentation": {}
    },
    {
        "label": "IndieHackersLead",
        "importPath": "app.models.lead",
        "description": "app.models.lead",
        "isExtraImport": true,
        "detail": "app.models.lead",
        "documentation": {}
    },
    {
        "label": "scrape_indiehackers_rss",
        "importPath": "app.scrapers.spiders.indiehackers",
        "description": "app.scrapers.spiders.indiehackers",
        "isExtraImport": true,
        "detail": "app.scrapers.spiders.indiehackers",
        "documentation": {}
    },
    {
        "label": "run_in_threadpool",
        "importPath": "starlette.concurrency",
        "description": "starlette.concurrency",
        "isExtraImport": true,
        "detail": "starlette.concurrency",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "HttpUrl",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "feedparser",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "feedparser",
        "description": "feedparser",
        "detail": "feedparser",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "app.api.v1.endpoints.health",
        "description": "app.api.v1.endpoints.health",
        "isExtraImport": true,
        "detail": "app.api.v1.endpoints.health",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "app.api.v1.endpoints.leads",
        "description": "app.api.v1.endpoints.leads",
        "isExtraImport": true,
        "detail": "app.api.v1.endpoints.leads",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "app.api.v1.endpoints.health",
        "description": "app.api.v1.endpoints.health",
        "peekOfCode": "router = APIRouter()\n@router.get(\"/health\", tags=[\"Health\"])\nasync def health_check():\n    \"\"\"\n    Health check endpoint to verify if the API is running.\n    Returns a simple JSON response indicating the status of the API.\n    \"\"\"\n    return {\"status\": \"ok\"}",
        "detail": "app.api.v1.endpoints.health",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "app.api.v1.endpoints.leads",
        "description": "app.api.v1.endpoints.leads",
        "peekOfCode": "router = APIRouter()\n@router.get(\"/leads\", response_model=List[Lead], tags=[\"Leads\"])\nasync def get_leads(\n    type: Optional[str] = Query(None, description=\"Filter by lead type\"),\n    limit: int = Query(30, ge=1, le=100),\n):\n    \"\"\"\n    Retrieve a list of leads with optional filtering by type and pagination.\n    - **type**: Optional filter to get leads of a specific type.\n    - **limit**: Number of leads to return (default is 30, max is 100).",
        "detail": "app.api.v1.endpoints.leads",
        "documentation": {}
    },
    {
        "label": "Lead",
        "kind": 6,
        "importPath": "app.models.lead",
        "description": "app.models.lead",
        "peekOfCode": "class Lead(BaseModel):\n    id: str\n    name: str\n    profile_url: HttpUrl\n    title: Optional[str]\n    source: Optional[str]\n    scraped_at: datetime\nclass IndieHackersLead(BaseModel):\n    id: str\n    name: str",
        "detail": "app.models.lead",
        "documentation": {}
    },
    {
        "label": "IndieHackersLead",
        "kind": 6,
        "importPath": "app.models.lead",
        "description": "app.models.lead",
        "peekOfCode": "class IndieHackersLead(BaseModel):\n    id: str\n    name: str\n    profile_url: HttpUrl\n    title: Optional[str]\n    source: Optional[str]\n    scraped_at: datetime",
        "detail": "app.models.lead",
        "documentation": {}
    },
    {
        "label": "scrape_indiehackers_rss",
        "kind": 2,
        "importPath": "app.scrapers.spiders.indiehackers",
        "description": "app.scrapers.spiders.indiehackers",
        "peekOfCode": "def scrape_indiehackers_rss():\n    \"\"\"\n    Fetches the Indie Hackers \"Launches\" RSS feed and yields Lead objects.\n    \"\"\"\n    FEED_URL = \"https://ihrss.io/newest\"\n    feed = feedparser.parse(FEED_URL)\n    leads = []\n    for entry in feed.entries:\n        leads.append(Lead (\n            id=str(uuid.uuid4()),",
        "detail": "app.scrapers.spiders.indiehackers",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "app = FastAPI(\n    title=\"Lead Scraper API\",\n    version=\"0.1.0\",\n    docs_url=\"/docs\",\n    openapi_url=\"/openapi.json\",\n)\napp.include_router(health_router, prefix=\"/api/v1\")\napp.include_router(leads_router, prefix=\"/api/v1\")",
        "detail": "app.main",
        "documentation": {}
    }
]